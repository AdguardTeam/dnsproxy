name: Create release

on:
  push:
    tags:
      - '666'

jobs:
#  tests_win_mac:
#    runs-on: ${{ matrix.os }}
#    strategy:
#      matrix:
#        os:
#          - windows-latest
##          - macos-latest
#    env:
#      GO111MODULE: "on"
#    steps:
#      - uses: actions/checkout@master
#      - uses: actions/setup-go@v1
#        with:
#          go-version: 1.x
#      - name: tests
#        run: go test -mod=vendor -race -v -bench=. -coverprofile=coverage.txt -covermode=atomic ./...
#
#  tests_linux:
#    runs-on: ubuntu-latest
#    env:
#      GO111MODULE: "on"
#    steps:
#      - uses: actions/checkout@master
#      - uses: actions/setup-go@v1
#        with:
#          go-version: 1.x
#      - name: tests
#        run: |-
#          bash <(curl -s https://codecov.io/bash)
#          go test -mod=vendor -race -v -bench=. -coverprofile=coverage.txt -covermode=atomic ./...

  build:
#    needs:
#      - tests_win_mac
#      - tests_linux
    runs-on: ubuntu-latest
    env:
      GO111MODULE: "on"
    steps:
      - uses: actions/checkout@master
      - uses: actions/setup-go@v1
        with:
          go-version: 1.14.x
#      - name: Get the version
#        id: get_version
#        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}
#      - name: Set env
#        run: echo ::set-env name=RELEASE_VERSION::$(echo ${GITHUB_REF:10})
#          echo ::set-env name=RELEASE_VERSION::$(echo ${GITHUB_REF:10})
#          echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}"
      - name: Build
        run: |-
          GOOS=windows GOARCH=386 VERSION=${GITHUB_REF#refs/*/} make release
          ls -l build/dnsproxy-*
#          GOOS=windows GOARCH=amd64 VERSION=${RELEASE_VERSION:-dev} make release
#          GOOS=linux GOARCH=386 VERSION=${RELEASE_VERSION:-dev} make release
#          GOOS=linux GOARCH=amd64 VERSION=${RELEASE_VERSION:-dev} make release
#          GOOS=linux GOARCH=arm64 VERSION=${RELEASE_VERSION:-dev} make release
#          GOOS=linux GOARCH=arm GOARM=6 VERSION=${RELEASE_VERSION:-dev} make release
#          GOOS=linux GOARCH=mips GOMIPS=softfloat VERSION=${RELEASE_VERSION:-dev} make release
#          GOOS=linux GOARCH=mipsle GOMIPS=softfloat VERSION=${RELEASE_VERSION:-dev} make release
#          GOOS=freebsd GOARCH=arm GOARM=6 VERSION=${RELEASE_VERSION:-dev} make release
#          GOOS=darwin GOARCH=amd64 VERSION=${RELEASE_VERSION:-dev} make release
#          ls -l build/dnsproxy-*

      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

#      - name: Release
#        uses: softprops/action-gh-release@v1
#        if: startsWith(github.ref, 'refs/tags/')
#        with:
#          files: |
#            ./dnsproxy-*
#            dnsproxy-*.tar.gz
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


#      - name: Upload
#        uses: svenstaro/upload-release-action@v2
#        with:
#          repo_token: ${{ secrets.GITHUB_TOKEN }}
#          file: ./dnsproxy-*
##            target/release/dnsproxy-*.tar.gz
#          tag: ${{ github.ref }}
#          overwrite: true
#          file_glob: true

      - name: Upload
        uses: AButler/upload-release-assets@v2.0
        with:
#          release-tag: ${GITHUB_REF#refs/*/}
          files: 'build/dnsproxy-*.zip;build/dnsproxy-*.tar.gz'
          repo-token: ${{ secrets.GITHUB_TOKEN }}

#      - name: Upload Release Asset
#        id: upload-release-asset
#        uses: actions/upload-release-asset@v1
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        with:
#          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
#          asset_path: ./dnsproxy-*
##            ./dnsproxy-*.zip
##            ./dnsproxy-*.tar.gz
#          asset_name: ${{ github.workspase }}/build/*
#          asset_content_type: |
#            application/zip
#            application/tar.gz

#      - name: Upload binaries to release
#        uses: svenstaro/upload-release-action@v2
#        with:
#          repo_token: ${{ secrets.GITHUB_TOKEN }}
#          file: ./dnsproxy-*
##            target/release/dnsproxy-*.tar.gz
#          tag: ${{ github.ref }}
#          overwrite: true
#          file_glob: true
