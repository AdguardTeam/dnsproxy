name: Build Once Time

env:
  GO_VERSION: '1.18'
  REGISTRY: docker.io
  IMAGE_NAME: initdc/dnsproxy

on:
  workflow_dispatch:
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Set go version  
        uses: actions/setup-go@v2
        with:
          go-version: '${{ env.GO_VERSION }}'
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}
      - name: Extract Docker metadata
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}   
      - name: Set RELEASE_VERSION
        run: |
          set -e
          
          RELEASE_VERSION="${GITHUB_REF##*/}"
          if [[ "${RELEASE_VERSION}" != v* ]]; then RELEASE_VERSION='dev'; fi
          echo RELEASE_VERSION="${RELEASE_VERSION}" >> $GITHUB_ENV
      - name: Build release
        run: ruby build.rb ${RELEASE_VERSION}
      - name: Create release
        if: startsWith(github.ref, 'refs/tags/v')
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          path: "upload/*"
      - name: Upload to Release
        if: startsWith(github.ref, 'refs/tags/v')
        uses: softprops/action-gh-release@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          files: "upload/*"
      - name: Build and push Docker image
        run: ruby docker-tag.rb ${RELEASE_VERSION}

  notify:
    needs:
      - build
    if:
      ${{ always() &&
        (
          github.event_name == 'push' ||
          github.event.pull_request.head.repo.full_name == github.repository
        )
      }}
    runs-on: ubuntu-latest
    steps:
      - name: Conclusion
        uses: technote-space/workflow-conclusion-action@v1
      - name: Send Slack notif
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ env.WORKFLOW_CONCLUSION }}
          fields: workflow, repo, message, commit, author, eventName,ref
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
