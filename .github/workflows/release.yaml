name: Create release

on:
  push:
    tags:
      - '666'

jobs:
  tests_win_mac:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - windows-latest
#          - macos-latest
    env:
      GO111MODULE: "on"
    steps:
      - uses: actions/checkout@master
      - uses: actions/setup-go@v1
        with:
          go-version: 1.x
      - name: tests
        run: go test -mod=vendor -race -v -bench=. -coverprofile=coverage.txt -covermode=atomic ./...

  tests_linux:
    runs-on: ubuntu-latest
    env:
      GO111MODULE: "on"
    steps:
      - uses: actions/checkout@master
      - uses: actions/setup-go@v1
        with:
          go-version: 1.x
      - name: tests
        run: |-
          bash <(curl -s https://codecov.io/bash)
          go test -mod=vendor -race -v -bench=. -coverprofile=coverage.txt -covermode=atomic ./...

  build:
    needs:
      - tests_win_mac
      - tests_linux
    runs-on: ubuntu-latest
    env:
      GO111MODULE: "on"
    steps:
      - uses: actions/checkout@master
      - uses: actions/setup-go@v1
        with:
          go-version: 1.14.x
      - name: Set env
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}"
      - name: Build
        run: |-
          GOOS=windows GOARCH=386 VERSION=${RELEASE_VERSION:-dev} make release
          GOOS=windows GOARCH=amd64 VERSION=${RELEASE_VERSION:-dev} make release
          GOOS=linux GOARCH=386 VERSION=${RELEASE_VERSION:-dev} make release
          GOOS=linux GOARCH=amd64 VERSION=${RELEASE_VERSION:-dev} make release
          GOOS=linux GOARCH=arm64 VERSION=${RELEASE_VERSION:-dev} make release
          GOOS=linux GOARCH=arm GOARM=6 VERSION=${RELEASE_VERSION:-dev} make release
          GOOS=linux GOARCH=mips GOMIPS=softfloat VERSION=${RELEASE_VERSION:-dev} make release
          GOOS=linux GOARCH=mipsle GOMIPS=softfloat VERSION=${RELEASE_VERSION:-dev} make release
          GOOS=freebsd GOARCH=arm GOARM=6 VERSION=${RELEASE_VERSION:-dev} make release
          GOOS=darwin GOARCH=amd64 VERSION=${RELEASE_VERSION:-dev} make release
          ls -l build/dnsproxy-*

  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
