name: Build DNSproxy

on: push

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - windows-latest
          - macos-latest
    steps:
      - name: Build
        env:
          GO111MODULE: "on"
        if: runner.os == 'Linux'
        run: |
              go test -mod=vendor -race -v -bench=. -coverprofile=coverage.txt -covermode=atomic ./...
              GOOS=linux GOARCH=386 VERSION=${TRAVIS_TAG:-dev} make release
              GOOS=linux GOARCH=amd64 VERSION=${TRAVIS_TAG:-dev} make release
              GOOS=linux GOARCH=arm64 VERSION=${TRAVIS_TAG:-dev} make release
              GOOS=linux GOARCH=arm GOARM=6 VERSION=${TRAVIS_TAG:-dev} make release
              GOOS=linux GOARCH=mips GOMIPS=softfloat VERSION=${TRAVIS_TAG:-dev} make release
              GOOS=linux GOARCH=mipsle GOMIPS=softfloat VERSION=${TRAVIS_TAG:-dev} make release
              GOOS=freebsd GOARCH=arm GOARM=6 VERSION=${TRAVIS_TAG:-dev} make release
              ls -l build/dnsproxy-*
        if: runner.os == 'Windiws'
        run: |
          GOOS=windows GOARCH=386 VERSION=${TRAVIS_TAG:-dev} make release
          GOOS=windows GOARCH=amd64 VERSION=${TRAVIS_TAG:-dev} make release
          go test -mod=vendor -race -v -bench=. -coverprofile=coverage.txt -covermode=atomic ./...
          ls -l build/dnsproxy-*
        if: runner.os == 'Macos'
        run: |
          GOOS=darwin GOARCH=amd64 VERSION=${TRAVIS_TAG:-dev} make release
          ls -l build/dnsproxy-*
